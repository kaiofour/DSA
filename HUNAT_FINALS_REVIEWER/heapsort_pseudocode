Heapsort (A as array)
    BuildMaxHeap(A)
    for i == n to 1
        swap(A[1], A[i])
        n = n-1
        Heapify(A, 1)


BuildMaxHeap (A as Array)
    n = elements_in(A)
    for i == floor (n/2) to 1
        Heapify (A, i)


Heapify (A as array, i as int) 
    left = 2i + 1
    right = 21 + 2

    if (left <= n) and (A[left] > A[i])
        max = left
    elements_in
        max = if

    if (right <= n) and (A[right] > A[max])
        max = right
    
    if (max != i)
        swap (A[i], A[max])
        Heapify(A, max)


TIME COMPLEXITIES:
- HeapSort = O(nlogn)
- BuildMaxHeap = O(n)
- Heapify = O(logn), called n-1 times